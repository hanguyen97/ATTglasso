source("~/Documents/Cornell/Projects/FC_SC/Code/att_glasso/library_att.glassoTEST2.R")
oracle.Theta <<- Theta
start.T <- Sys.time()
out.att.glasso <- glasso.cd.autotune(X=X, final.cycle=FALSE,
sigma2.method="lasso.all",
F.test=TRUE)
## ----- ATTglasso -----
source("~/Documents/Cornell/Projects/FC_SC/Code/att_glasso/library_att.glassoTEST2.R")
oracle.Theta <<- Theta
start.T <- Sys.time()
out.att.glasso <- glasso.cd.autotune(X=X, final.cycle=FALSE,
sigma2.method="lasso.all",
F.test=TRUE)
library(CVglasso)
library(MASS)
library(glasso)
set.seed(1)
p <- 20
n <- 200
Theta <- matrix(diag(rep(seq(1,5),4)), nrow=p)
# Theta <- matrix(data=0, nrow=p, ncol=p)
# diag(Theta) <- 1
offd1 <- 0.3
diag(Theta[1:(p-1), 2:p]) <- offd1
diag(Theta[2:p, 1:(p-1)]) <- offd1
eigen(Theta)$values
Sigma <- solve(Theta)
eigen(Sigma)$values
if (min(eigen(Sigma)$values)<=1e-3) {
stop("Sigma is not positive definite")
}
X <- mvrnorm(n=n, mu=rep(0,p), Sigma=Sigma)
## ----- CVglasso -----
out.cv.loglik = CVglasso(X=X, S=cov(X), crit.cv="loglik", K=5, diagonal=TRUE)
log2(out.cv.loglik$Tuning[2])
Theta.hat.glasso <- glasso(s=cov(X),rho=out.cv.loglik$Tuning[2],
penalize.diagonal = TRUE)$wi
Theta.hat.cv <- out.cv.loglik$Omega
## ----- huge -----
out.huge <- huge(X, method = "glasso")
out.huge.ebic <- huge.select(out.huge, criterion = "ebic")
Theta.hat.huge.ebic <- glasso(s=cov(X),rho=out.huge.ebic$opt.lambda,
penalize.diagonal = TRUE)$wi
## ----- ATTglasso -----
source("~/Documents/Cornell/Projects/FC_SC/Code/att_glasso/library_att.glassoTEST2.R")
oracle.Theta <<- Theta
start.T <- Sys.time()
out.att.glasso <- glasso.cd.autotune(X=X, final.cycle=FALSE,
sigma2.method="lasso.all",
F.test=TRUE)
(Sys.time()-start.T )
View(round(out.att.glasso,3))
Theta.hat.att.glasso <- out.att.glasso$Theta
View(round(Theta.hat.att.glasso,3))
View(round(Theta.hat.cv,3))
# compare with best glasso AUROC
truth <- (!!upperTriangle(round(Theta, 5), diag = FALSE)) + 0
library(gdata)
# compare with best glasso AUROC
truth <- (!!upperTriangle(round(Theta, 5), diag = FALSE)) + 0
pred.att.glasso <- abs(upperTriangle(round((Theta.hat.att.glasso), 5), diag = FALSE))
pred.cv.loglik <- abs(upperTriangle(round((Theta.hat.cv.loglik), 5), diag = FALSE))
pred.arr.glasso <- abs(upperTriangle(round((Theta.hat.huge.ebic), 5), diag = FALSE))
roc(truth, pred.att.glasso)$auc
library(pROC)
roc(truth, pred.att.glasso)$auc
roc(truth, pred.cv.loglik)$auc
pred.cv.loglik <- abs(upperTriangle(round((Theta.hat.cv.loglik), 5), diag = FALSE))
roc(truth, pred.cv.loglik)$auc
pred.cv.loglik
truth
pred.att.glasso
pred.cv.loglik <- abs(upperTriangle(round((Theta.hat.glasso), 5), diag = FALSE))
pred.arr.glasso <- abs(upperTriangle(round((Theta.hat.huge.ebic), 5), diag = FALSE))
roc(truth, pred.att.glasso)$auc
roc(truth, pred.cv.loglik)$auc
roc(truth, pred.arr.glasso)$auc
rel.diff(Theta.hat.att.glasso, Theta)
source("/Users/hanguyen/Documents/Cornell/Projects/FC_SC/Code/att_glasso/library_test.R")
rel.diff(Theta.hat.att.glasso, Theta)
rel.diff(Theta.hat.glasso, Theta)
rel.diff(Theta.hat.huge.ebic, Theta)
library(CVglasso)
library(MASS)
library(glasso)
library(gdata)
library(pROC)
set.seed(1)
p <- 5
n <- 100
Theta <- matrix(diag(seq(1,5)), nrow=p)
# # Theta <- matrix(data=0, nrow=p, ncol=p)
# # diag(Theta) <- 1
# offd1 <- 0.3
# diag(Theta[1:(p-1), 2:p]) <- offd1
# diag(Theta[2:p, 1:(p-1)]) <- offd1
eigen(Theta)$values
Sigma <- solve(Theta)
eigen(Sigma)$values
if (min(eigen(Sigma)$values)<=1e-3) {
stop("Sigma is not positive definite")
}
X <- mvrnorm(n=n, mu=rep(0,p), Sigma=Sigma)
## ----- CVglasso -----
out.cv.loglik = CVglasso(X=X, S=cov(X), crit.cv="loglik", K=5, diagonal=TRUE)
log2(out.cv.loglik$Tuning[2])
Theta.hat.glasso <- glasso(s=cov(X),rho=out.cv.loglik$Tuning[2],
penalize.diagonal = TRUE)$wi
Theta.hat.cv <- out.cv.loglik$Omega
View(Theta.hat.cv)
## ----- huge -----
out.huge <- huge(X, method = "glasso")
out.huge.ebic <- huge.select(out.huge, criterion = "ebic")
Theta.hat.huge.ebic <- glasso(s=cov(X),rho=out.huge.ebic$opt.lambda,
penalize.diagonal = TRUE)$wi
## ----- ATTglasso -----
source("~/Documents/Cornell/Projects/FC_SC/Code/att_glasso/library_att.glassoTEST2.R")
oracle.Theta <<- Theta
start.T <- Sys.time()
out.att.glasso <- glasso.cd.autotune(X=X, final.cycle=FALSE,
sigma2.method="lasso.all",
F.test=TRUE)
Theta.hat.att.glasso <- out.att.glasso$Theta
(Sys.time()-start.T )
# compare with best glasso AUROC
truth <- (!!upperTriangle(round(Theta, 5), diag = FALSE)) + 0
pred.att.glasso <- abs(upperTriangle(round((Theta.hat.att.glasso), 5), diag = FALSE))
pred.cv.loglik <- abs(upperTriangle(round((Theta.hat.glasso), 5), diag = FALSE))
pred.arr.glasso <- abs(upperTriangle(round((Theta.hat.huge.ebic), 5), diag = FALSE))
roc(truth, pred.att.glasso)$auc
roc(truth, pred.cv.loglik)$auc
roc(truth, pred.arr.glasso)$auc
# compare with best glasso AUROC
truth <- (!!upperTriangle(round(Theta, 5), diag = FALSE)) + 0
truth
View(Theta.hat.att.glasso)
rel.diff(Theta.hat.cv, Theta)
rel.diff(Theta.hat.huge.ebic, Theta)
rel.diff(Theta.hat.att.glasso, Theta)
# corplot
par(mfrow = c(2, 2))
corrplot(cov2cor(Theta), method = "color", tl.pos="n")
library(corrplot)
# corplot
par(mfrow = c(2, 2))
corrplot(cov2cor(Theta), method = "color", tl.pos="n")
corrplot(cov2cor(Theta.hat.cv), method = "color", tl.pos="n")
corrplot(cov2cor(Theta.hat.att.glasso), method = "color", tl.pos="n")
corrplot(cov2cor(Theta.hat.huge.ebic), method = "color", tl.pos="n")
par(mfrow = c(1, 1))
?cov2cor
?corrplot
corrplot(Theta, method = "color", tl.pos="n", is.corr=FALSE)
?corrplot
corrplot(Theta, method = "color", tl.pos="n", is.corr=FALSE, col.lim=c(-5,5))
par(mfrow = c(2, 2))
corrplot(Theta, method = "color", tl.pos="n", is.corr=FALSE, col.lim=c(-5,5))
corrplot(Theta.hat.cv, method = "color", tl.pos="n", is.corr=FALSE, col.lim=c(-5,5))
corrplot(Theta.hat.att.glasso, method = "color", tl.pos="n", is.corr=FALSE, col.lim=c(-5,5))
corrplot(Theta.hat.huge.ebic, method = "color", tl.pos="n", is.corr=FALSE, col.lim=c(-5,5))
par(mfrow = c(1, 1))
?corrplot
# corplot
par(mfrow = c(2, 2))
corrplot(Theta, method = "number", tl.pos="n", is.corr=FALSE, col.lim=c(-5,5))
corrplot(Theta.hat.cv, method = "number", tl.pos="n", is.corr=FALSE, col.lim=c(-5,5))
corrplot(Theta.hat.att.glasso, method = "number", tl.pos="n", is.corr=FALSE, col.lim=c(-5,5))
corrplot(Theta.hat.huge.ebic, method = "number", tl.pos="n", is.corr=FALSE, col.lim=c(-5,5))
par(mfrow = c(1, 1))
par(mfrow = c(2, 2))
corrplot(Theta, method = "number", tl.pos="n", is.corr=FALSE, col.lim=c(-1,5))
corrplot(Theta.hat.cv, method = "number", tl.pos="n", is.corr=FALSE, col.lim=c(-1,5))
corrplot(Theta.hat.att.glasso, method = "number", tl.pos="n", is.corr=FALSE, col.lim=c(-1,5))
corrplot(Theta.hat.huge.ebic, method = "number", tl.pos="n", is.corr=FALSE, col.lim=c(-1,5))
par(mfrow = c(1, 1))
?corrplot
# corplot
par(mfrow = c(2, 2))
corrplot(Theta, method = c("number", "color"), tl.pos="n", is.corr=FALSE, col.lim=c(-5,5))
library(CVglasso)
View(CVglasso)
load("~/Downloads/DGP.RData")
View(dgp.df)
library(RcppArmadillo)
RcppArmadillo.package.skeleton()
library(glass)
library(glasso)
?glasso
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
View(compare.arr)
345.963378 / 60
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_data.RData")
p <- 300
n <- 300
R <- 20
att.glasso.arr <- array(NA, c(R, p, p))
sigma.hat.arr <- array(NA, c(R, p))
i = 13
start.T <- Sys.time()
out.att.glassoC <- glasso_autotune(X=X_list[[i]], alpha=0.02, thr=1e-3,
maxit=100, penalize_diag = TRUE,
verbose_i=TRUE)
1625.380568 /60
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_data.RData")
p <- 300
n <- 300
R <- 20
att.glasso.arr <- array(NA, c(R, p, p))
sigma.hat.arr <- array(NA, c(R, p))
i = 2
start.T <- Sys.time()
out.att.glassoC <- glasso_autotune(X=X_list[[i]], alpha=0.02, thr=1e-3,
maxit=100, penalize_diag = TRUE,
verbose_i=TRUE)
?scale
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_data.RData")
p <- 300
n <- 300
R <- 20
att.glasso.arr <- array(NA, c(R, p, p))
sigma.hat.arr <- array(NA, c(R, p))
i = 2
start.T <- Sys.time()
out.att.glassoC <- glasso_autotune(X=X_list[[i]], alpha=0.05, thr=1e-3,
maxit=100, penalize_diag = TRUE,
verbose_i=TRUE)
500/60
library(CVglasso)
?CVglasso
300/60
800/60
900/60
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
View(compare.arr)
1072.239510/60
338.176393 /60
library(nestedcv)
?nestcv.glmnet
setwd("~/Documents/Cornell/Projects/FC_SC/Code/Rpack/ATTglasso")
devtools::install()
devtools::install()
devtools::install()
library(ATTglasso)
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_data.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_data.RData")
View(compare.arr)
300/60
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_data.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_data.RData")
p <- 300
n <- 500
R <- 20
att.glasso.arr <- array(NA, c(R, p, p))
sigma.hat.arr <- array(NA, c(R, p))
i = 13
start.T <- Sys.time()
out.att.glassoC <- glasso_autotune(X=X_list[[i]], alpha=0.02, thr=0.02,
maxit=100, penalize_diag = TRUE,
verbose_i=FALSE)
devtools::install()
library(ATTglasso)
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_data.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_data.RData")
p <- 300
n <- 500
R <- 20
att.glasso.arr <- array(NA, c(R, p, p))
sigma.hat.arr <- array(NA, c(R, p))
i = 13
start.T <- Sys.time()
out.att.glassoC <- glasso_autotune(X=X_list[[i]], alpha=0.02, thr=0.02,
maxit=100, penalize_diag = TRUE,
verbose_i=FALSE)
devtools::install()
library(ATTglasso)
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_data.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_data.RData")
p <- 300
n <- 500
R <- 20
att.glasso.arr <- array(NA, c(R, p, p))
sigma.hat.arr <- array(NA, c(R, p))
i = 13
start.T <- Sys.time()
out.att.glassoC <- glasso_autotune(X=X_list[[i]], alpha=0.02, thr=0.02,
maxit=100, penalize_diag = TRUE,
verbose_i=FALSE)
devtools::install()
library(ATTglasso)
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_data.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_data.RData")
p <- 300
n <- 500
R <- 20
att.glasso.arr <- array(NA, c(R, p, p))
sigma.hat.arr <- array(NA, c(R, p))
i = 13
start.T <- Sys.time()
out.att.glassoC <- glasso_autotune(X=X_list[[i]], alpha=0.02, thr=0.02,
maxit=100, penalize_diag = TRUE,
verbose_i=FALSE)
devtools::install()
devtools::install()
devtools::install()
library(ATTglasso)
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_data.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_data.RData")
p <- 300
n <- 500
R <- 20
att.glasso.arr <- array(NA, c(R, p, p))
sigma.hat.arr <- array(NA, c(R, p))
i = 13
start.T <- Sys.time()
out.att.glassoC <- glasso_autotune(X=X_list[[i]], alpha=0.02, thr=0.02,
maxit=100, penalize_diag = TRUE,
verbose_i=FALSE)
(Sys.time()-start.T )
devtools::install()
library(ATTglasso)
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_data.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_data.RData")
p <- 300
n <- 500
R <- 20
att.glasso.arr <- array(NA, c(R, p, p))
sigma.hat.arr <- array(NA, c(R, p))
i = 13
start.T <- Sys.time()
out.att.glassoC <- glasso_autotune(X=X_list[[i]], alpha=0.02, thr=0.001,
maxit=100, penalize_diag = TRUE,
verbose_i=FALSE)
devtools::install()
library(ATTglasso)
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_data.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_data.RData")
p <- 300
n <- 500
R <- 20
att.glasso.arr <- array(NA, c(R, p, p))
sigma.hat.arr <- array(NA, c(R, p))
i = 13
start.T <- Sys.time()
out.att.glassoC <- glasso_autotune(X=X_list[[i]], alpha=0.02, thr=0.001,
maxit=100, penalize_diag = TRUE,
verbose_i=FALSE)
(Sys.time()-start.T )
devtools::install()
devtools::install()
devtools::document()
devtools::install()
library(ATTglasso)
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_data.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_data.RData")
p <- 300
n <- 500
R <- 20
att.glasso.arr <- array(NA, c(R, p, p))
sigma.hat.arr <- array(NA, c(R, p))
i = 13
start.T <- Sys.time()
out.att.glassoC <- glasso_autotune(X=X_list[[i]], alpha=0.02, thr=0.001,
maxit=100, penalize_diag = TRUE,
verbose_i=FALSE)
(Sys.time()-start.T )
X <- X_list[[i]]
corrplot(cov2cor(out.att.glassoC$Theta), method = "color", tl.pos="n")
node = 16
out.att.glassoC$sigma2.hat[16,]
X <- X_list[[i]]
out <- lm(X[,node] ~ -1 + X[,node-1] + X[,node+1])
(sigma.hat.ls <- (1/(n-2))*sum((out$residuals)^2))
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_data.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_data.RData")
p <- 300
n <- 500
R <- 20
att.glasso.arr <- array(NA, c(R, p, p))
sigma.hat.arr <- array(NA, c(R, p))
i = 8
start.T <- Sys.time()
out.att.glassoC <- glasso_autotune(X=X_list[[i]], alpha=0.02, thr=0.001,
maxit=100, penalize_diag = TRUE,
verbose_i=FALSE)
(Sys.time()-start.T )
778.084401 /60
1072.239510 /60
1e-3
4.497988/14 * 100
4.497988/14 * 50
devtools::install()
library(ATTglasso)
library(ATTglasso)
library(corrplot)
# load("/Users/hanguyen/Downloads/band1_p100_n50_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/random0.01_p300_n300_diag0_R10_data.RData")
load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_compare.arr.RData")
load("/Users/hanguyen/Downloads/band1_p100_n300_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n500_diag0_R20_data.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_compare.arr.RData")
# load("/Users/hanguyen/Downloads/band1_p300_n300_diag0_R20_data.RData")
p <- 100
n <- 300
R <- 20
att.glasso.arr <- array(NA, c(R, p, p))
sigma.hat.arr <- array(NA, c(R, p))
i = 1
start.T <- Sys.time()
out.att.glassoC <- glasso_autotune(X=X_list[[i]], alpha=0.02, thr=0.001,
maxit=100, penalize_diag = TRUE,
verbose_i=TRUE)
(Sys.time()-start.T )
